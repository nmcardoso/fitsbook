{"version":3,"sources":["components/Navbar.js","components/HomeRoute.js","api/ModelsApi.js","api/Api.js","components/TrainingLabel.js","components/ModelCard.js","components/ModelsRoute.js","components/Chart.js","helpers/HistoryParser.js","components/SideModelInfo.js","components/TrainingPanel.js","components/StatsRoute.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","src","width","height","alt","type","data-toggle","data-target","id","exact","activeClassName","HomeRoute","ModelsApi","this","get","basePost","then","res","text","API_ROOT","route","fetch","method","mode","redirect","json","body","init","txt","TrainingLabel","React","Component","DurationLabel","props","show","duration","ModelCard","timestamp","date","Date","day","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","Math","floor","now","interval","start","end","delta","abs","days","s","model","style","color","textDecoration","name","training_end","timeSince","training_start","elapsedTime","ModelsRoute","state","cards","rows","i","ceil","length","cols","j","push","key","api","getModels","models","map","setState","createTable","Chart","chart","ctx","document","getElementById","chartConfig","data","labels","datasets","options","scales","yAxes","ticks","beginAtZero","aspectRatio","responsive","chartInstance","ChartJS","prevProps","prevState","update","HistoryParser","colors","keys","label","borderColor","backgroundColor","fill","lineTension","Object","metrics","createDatasetArray","metricsObj","reduce","acc","curr","forEach","metric","r","epoch","dataset","SideModelInfo","keyPrefix","k","layer","info","Trainable","href","toLocaleString","optimizer","config","learning_rate","rho","decay","epsilon","layers","class_name","String","trainable","dtype","units","activation","batch_input_shape","parseModelData","drawLayers","parseLayersData","parseOptimizerData","StopSignalNotification","TrainingPanel","showStopSignalNotification","stopTraining","console","log","tabIndex","data-dismiss","onClick","stopTrainingClickHandler","disabled","createModal","StatsRoute","params","match","socket","getHistory","history","parser","parsedHistory","parse","newData","oldData","includes","drawChart","io","on","socketUpdate","a","async","getModel","close","condition","renderTrainingPanel","App","path","component","Boolean","window","location","hostname","ReactDOM","render","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kQA4BeA,MAzBf,WACE,OACE,yBAAKC,UAAU,+CACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACrB,yBAAKE,IAA8B,6BAA8BC,MAAM,KAAKC,OAAO,KAAKC,IAAI,KAC5F,0BAAML,UAAU,QAAhB,aAGF,4BAAQA,UAAU,iBAAiBM,KAAK,SAASC,cAAY,WAAWC,cAAY,cAClF,0BAAMR,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BS,GAAG,aAC3C,wBAAIT,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASU,OAAK,EAACT,GAAG,IAAID,UAAU,WAAWW,gBAAgB,UAA3D,SAEF,wBAAIX,UAAU,YACZ,kBAAC,IAAD,CAASU,OAAK,EAACT,GAAG,UAAUD,UAAU,WAAWW,gBAAgB,UAAjE,eCPGC,MAXf,WACE,OACE,yBAAKZ,UAAU,kBACb,yBAAKA,UAAU,aACb,wCACA,0C,mDCaOa,E,oLAhBX,OAAOC,KAAKC,IAAI,a,+BAGTN,GACP,OAAOK,KAAKC,IAAL,iBAAmBN,M,iCAGjBA,GACT,OAAOK,KAAKC,IAAL,mBAAqBN,M,mCAGjBA,GACX,OAAOK,KAAKE,SAAL,oBAA2BP,EAA3B,UAAsCQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,c,cCZ/D,aAAe,oBAEbL,KAAKM,SAC2B,iC,gDAG9BC,GAOF,OAAOC,MAAM,GAAD,OAAIR,KAAKM,UAAT,OAAoBC,GANnB,CACXE,OAAQ,MACRC,KAAM,OACNC,SAAU,WAGmCR,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,Y,2BAG5DL,EAAOM,GACV,IAAMC,EAAO,CACXL,OAAQ,OACRC,KAAM,OACNC,SAAU,SACVE,QAGF,OAAOL,MAAM,GAAD,OAAIR,KAAKM,UAAT,OAAoBC,GAASO,GAAMX,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,Y,+BAGxDL,EAAOM,GACd,IAAMC,EAAO,CACXL,OAAQ,OACRC,KAAM,OACNC,SAAU,SACVE,QAGF,OAAOL,MAAM,GAAD,OAAIR,KAAKM,UAAT,OAAoBC,GAASO,K,6BAIzCN,MAAM,GAAD,OAAIR,KAAKM,SAAT,UAA0BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAY,GAC1D,QAAIA,S,MC/BKC,E,iLATX,OACE,6BACE,0BAAM9B,UAAU,8CAChB,0BAAMA,UAAU,qBAAhB,iB,GALoB+B,IAAMC,WCElC,SAASC,EAAcC,GACrB,OAAIA,EAAMC,KAEN,yBAAKnC,UAAU,YACb,0BAAMA,UAAU,8CAAhB,eACCkC,EAAME,UAIN,K,IAgGMC,E,YA5Fb,WAAYH,GAAQ,IAAD,8BACjB,4CAAMA,KACDA,MAAQA,EAFI,E,wEAKRI,GACT,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,GAAO,IAAMF,EAAKG,WAAWC,OAAO,GACpCC,GAAS,IAAML,EAAKM,YAAYF,OAAO,GACvCG,GAAQ,IAAMP,EAAKQ,eAAeJ,OAAO,GACzCK,GAAS,IAAMT,EAAKU,YAAYN,OAAO,GACvCO,GAAW,IAAMX,EAAKY,cAAcR,OAAO,GAC3CS,GAAW,IAAMb,EAAKc,cAAcV,OAAO,GAEjD,MAAM,GAAN,OAAUF,EAAV,YAAiBG,EAAjB,YAA0BE,EAA1B,cAAoCE,EAApC,YAA6CE,EAA7C,YAAwDE,K,gCAGhDd,GACR,IAKMc,EAAUE,KAAKC,OAAOf,KAAKgB,MAAQlB,GAAa,KAElDmB,EAAWH,KAAKC,MAAMH,EAPJ,SAQtB,OAAIK,EAAW,EACNA,EAAW,cAGpBA,EAAWH,KAAKC,MAAMH,EAXC,SAYR,EACNK,EAAW,eAGpBA,EAAWH,KAAKC,MAAMH,EAfD,QAgBN,EACNK,EAAW,aAGpBA,EAAWH,KAAKC,MAAMH,EAnBA,OAoBP,EACNK,EAAW,cAGpBA,EAAWH,KAAKC,MAAMH,EAvBE,KAwBT,EACNK,EAAW,eAGbH,KAAKC,MAAMH,GAAW,iB,kCAGnBM,EAAOC,GACjB,IAAMC,EAAQN,KAAKO,KAAKF,EAAMD,GAAS,KACjCI,EAAOR,KAAKC,MAAMK,EAAQ,OAC1BZ,EAAQM,KAAKC,MAAMK,EAAQ,MAAQ,GACnCV,EAAUI,KAAKC,MAAMK,EAAQ,IAAM,GACnCR,EAAUQ,EAAQ,GAEpBG,EAAID,EAAO,EAAIA,EAAO,UAAY,GAItC,OAHAC,GAAKf,EAAQ,EAAIA,EAAQ,MAAQ,GACjCe,GAAKb,EAAU,EAAIA,EAAU,QAAU,GACvCa,GAAKX,EAAU,EAAIA,EAAU,IAAM,K,+BAI3B,IAAD,EACetC,KAAKoB,MAAnBzB,EADD,EACCA,GAAIuD,EADL,EACKA,MAEZ,OACE,kBAAC,IAAD,CAAM/D,GAAE,iBAAYQ,GAAMwD,MAAO,CAAEC,MAAO,UAAWC,eAAgB,SACnE,yBAAKnE,UAAS,eAAUc,KAAKoB,MAAMlC,YACjC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,cACXgE,EAAMA,MAAMI,OAEbJ,EAAMK,cAAgB,kBAAC,EAAD,OAE1B,2BAAOrE,UAAU,qBACf,0BAAMA,UAAU,8CAAhB,aACCc,KAAKwD,UAAUN,EAAMO,gBAFxB,UAGE,kBAACtC,EAAD,CAAeE,KAAM6B,EAAMK,aAAcjC,SAAUtB,KAAK0D,YAAYR,EAAMO,eAAgBP,EAAMK,wB,GApFtFtC,IAAMC,WC4CfyC,E,YAvDb,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KACDwC,MAAQ,CACXC,MAAO,IAHQ,E,yEAOPA,GAGV,IAFA,IAAMC,EAAO,GAEJC,EAAI,EAAGA,EAAIvB,KAAKwB,KAAKH,EAAMI,OAAS,GAAMF,IAAK,CAGtD,IAFA,IAAMG,EAAO,GAEJC,EAAI,EAAGA,EAAI,GAAK,EAAIJ,EAAII,EAAIN,EAAMI,OAAQE,IACjDD,EAAKE,KACH,yBAAKC,IAAG,YAAON,EAAP,YAAYI,GAAKjF,UAAU,YAChC2E,EAAM,EAAIE,EAAII,KAKrBL,EAAKM,KACH,yBAAKC,IAAG,YAAON,GAAK7E,UAAU,OAC3BgF,IAKP,OAAOJ,I,6HAIDQ,EAAM,IAAIvE,E,mBACKuE,EAAIC,a,OAAnBC,E,OAEAX,EAAQW,EAAOC,KAAI,SAAAvB,GACvB,OACE,kBAAC,EAAD,CAAWmB,IAAKnB,EAAMvD,GAAIA,GAAIuD,EAAMvD,GAAIuD,MAAOA,EAAOhE,UAAU,YAIpEc,KAAK0E,SAAS,CACZb,MAAOA,I,gFAKT,OACE,yBAAK3E,UAAU,kBACZc,KAAK2E,YAAY3E,KAAK4D,MAAMC,Y,GAlDX5C,IAAMC,W,yBC8CjB0D,E,YA9Cb,WAAYxD,GAAQ,IAAD,8BACjB,4CAAMA,KACDyD,MAAQ,KAFI,E,iFAMjB,IAAMC,EAAMC,SAASC,eAAe,eACpChF,KAAKiF,YAAc,CACjBzF,KAAM,OACN0F,KAAM,CACJC,OAAQ,GACRC,SAAU,IAEZC,QAAS,CACPC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,MAInBC,YAAa,KACbC,YAAY,IAIhB3F,KAAK4F,cAAgB,IAAIC,IAAQf,EAAK9E,KAAKiF,e,yCAG1Ba,EAAWC,GACxB/F,KAAKoB,MAAM8D,OACblF,KAAKiF,YAAYC,KAAKC,OAASnF,KAAKoB,MAAM8D,KAAKC,OAC/CnF,KAAKiF,YAAYC,KAAKE,SAAWpF,KAAKoB,MAAM8D,KAAKE,SACjDpF,KAAK4F,cAAcI,Y,+BAKrB,OACE,yBAAK7C,MAAO,CAAE9D,MAAOW,KAAKoB,MAAM/B,MAAOC,OAAQU,KAAKoB,MAAM9B,SACxD,4BAAQK,GAAG,qB,GAzCCsB,IAAMC,WC+DX+E,E,WAjEb,aAAe,oBACbjG,KAAKkG,OAAS,CACZ,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,sBAEFlG,KAAKoF,SAAW,G,+DAGCe,GAAO,IAAD,OACvB,OAAOA,EAAK1B,KAAI,SAACJ,EAAKN,GACpB,MAAO,CACLqC,MAAO/B,EACPa,KAAM,GACNmB,YAAa,EAAKH,OAAOnC,GACzBuC,gBAAiB,EAAKJ,OAAOnC,GAC7BwC,MAAM,EACNC,YAAa,Q,4BAKbtB,GACJ,GAA6B,IAAzBlF,KAAKoF,SAASnB,OAAc,CAC9B,KAAIiB,EAAKjB,OAAS,GAIhB,OAHA,IAAMkC,EAAOM,OAAON,KAAKjB,EAAK,GAAGwB,SACjC1G,KAAKoF,SAAWpF,KAAK2G,mBAAmBR,GAO5C,IAAMS,EAAa1B,EAAK2B,QAAO,SAACC,EAAKC,GAQnC,OAPAN,OAAON,KAAKY,EAAKL,SAASM,SAAQ,SAAAC,GAC5BA,KAAUH,EACZA,EAAIG,GAAQ7C,KAAK2C,EAAKL,QAAQO,IAE9BH,EAAIG,GAAU,CAACF,EAAKL,QAAQO,OAGzBH,IACN,IAEG3B,EAASD,EAAKT,KAAI,SAAAyC,GACtB,OAAOA,EAAEC,SASX,OANAnH,KAAKoF,SAAS4B,SAAQ,SAAAI,GAChBA,EAAQhB,SAASQ,IACnBQ,EAAQlC,KAAO0B,EAAWQ,EAAQhB,WAI/B,CACLjB,OAAQA,EACRC,SAAUpF,KAAKoF,c,KCyDNiC,G,0LAlHDnC,EAAMoC,GAChB,GAAKpC,EAAL,CACA,IAAMpB,EAAO2C,OAAON,KAAKjB,GAAMT,KAAI,SAAC8C,EAAGxD,GACrC,OAAKmB,EAAKqC,GAGR,wBAAIlD,IAAKiD,EAAY,IAAMvD,GACzB,4BAAKwD,GACL,4BAAKrC,EAAKqC,KALO,QAUvB,OACE,2BAAOrI,UAAU,yDACf,+BACG4E,O,iCAMEoB,EAAMoC,GAAY,IAAD,OACpBxD,EAAOoB,EAAKT,KAAI,SAAC+C,EAAOzD,GAC5B,OACE,yBAAK7E,UAAU,YAAYmF,IAAG,UAAKiD,EAAL,YAAkBvD,IAC9C,yBAAK7E,UAAU,iCACb,uBAAGA,UAAS,oCAA+BsI,EAAMC,KAAKC,UAAY,UAAY,aAC5EjI,cAAY,WACZkI,KAAI,oBAAeL,EAAf,YAA4BvD,IAC/ByD,EAAMtI,YAGX,yBAAKA,UAAU,WAAWS,GAAE,mBAAc2H,EAAd,YAA2BvD,IACrD,yBAAK7E,UAAU,2BACZ,EAAKyF,YAAY6C,EAAMC,KAAvB,mBAAyCH,EAAzC,YAAsDvD,EAAtD,gBAOX,OACE,6BACGD,K,uCAML,IAAMZ,EAAQlD,KAAKoB,MAAM8B,MAEzB,OAAIA,GAASuD,OAAON,KAAKjD,GAAOe,OAAS,EAChC,CACL,KAAQf,EAAMA,MAAMI,KACpB,iBAAkB,IAAI5B,KAAKwB,EAAMO,gBAAgBmE,iBACjD,eAAgB,IAAIlG,KAAKwB,EAAMK,cAAcqE,iBAC7C,SAAY,QAGT,K,2CAIP,IAAM1E,EAAQlD,KAAKoB,MAAM8B,MAEzB,OAAIA,GAASuD,OAAON,KAAKjD,GAAOe,OAAS,EAChC,CACL,KAAQf,EAAM2E,UAAUvE,KACxB,gBAAiBJ,EAAM2E,UAAUC,OAAOC,cACxC,IAAO7E,EAAM2E,UAAUC,OAAOE,IAC9B,MAAS9E,EAAM2E,UAAUC,OAAOG,MAChC,QAAW/E,EAAM2E,UAAUC,OAAOI,SAG/B,K,wCAIP,IAAMhF,EAAQlD,KAAKoB,MAAM8B,MAEzB,OAAIA,GAASuD,OAAON,KAAKjD,GAAOe,OAAS,EAChCf,EAAMA,MAAM4E,OAAOK,OAAO1D,KAAI,SAAA+C,GACnC,MAAO,CACL,UAAaA,EAAMY,WACnB,KAAQ,CACN,UAAaC,OAAOb,EAAMM,OAAOQ,WACjC,YAAad,EAAMM,OAAOS,MAC1B,MAASf,EAAMM,OAAOU,MACtB,WAAchB,EAAMM,OAAOW,WAC3B,cAAejB,EAAMM,OAAOY,kBAAb,WAAqCL,OAAOb,EAAMM,OAAOY,mBAAzD,KAAiF,UAKjG,K,+BAIP,OACE,yBAAKxJ,UAAU,sBACb,wBAAIA,UAAU,QAAd,SACCc,KAAK2E,YAAY3E,KAAK2I,iBAAkB,SAEzC,wBAAIzJ,UAAU,QAAd,UACCc,KAAK4I,WAAW5I,KAAK6I,kBAAmB,UAEzC,wBAAI3J,UAAU,QAAd,aACCc,KAAK2E,YAAY3E,KAAK8I,qBAAsB,kB,GA7GzB7H,IAAMC,YCClC,SAAS6H,EAAuB3H,GAC9B,OACE,yBAAKlC,UAAS,8BAAyBkC,EAAMC,KAAO,GAAK,WAAzD,4E,IA2EW2H,E,YApEb,WAAY5H,GAAQ,IAAD,8BACjB,4CAAMA,KACDwC,MAAQ,CACXqF,4BAA4B,GAHb,E,yKAQX3E,EAAM,IAAIvE,E,mBACAuE,EAAI4E,aAAalJ,KAAKoB,MAAMzB,K,OAAtCuH,E,OACNiC,QAAQC,IAAIlC,GACF,OAANA,GACFlH,KAAK0E,SAAS,CAAEuE,4BAA4B,I,qFAIjC,IAAD,OACZ,OACE,yBAAK/J,UAAU,aAAaS,GAAG,uBAAuB0J,SAAS,MAC7D,yBAAKnK,UAAU,sCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,WACA,4BAAQM,KAAK,SAASN,UAAU,QAAQoK,eAAa,WAEvD,yBAAKpK,UAAU,cAAf,wCAGA,yBAAKA,UAAU,gBACb,4BAAQM,KAAK,SAASN,UAAU,oBAAoBoK,eAAa,SAAjE,SACA,4BACE9J,KAAK,SACLN,UAAU,kBACVoK,eAAa,QACbC,QAAS,kBAAM,EAAKC,6BAJtB,c,+BAeV,OACE,6BACE,yBAAKtK,UAAU,yBACb,yBAAKA,UAAU,qDACb,kBAAC,EAAD,MACA,4BACEA,UAAU,iBACVO,cAAY,QACZC,cAAY,wBACZ+J,SAAUzJ,KAAK4D,MAAMqF,4BAJvB,mBAUJ,kBAACF,EAAD,CAAwB1H,KAAMrB,KAAK4D,MAAMqF,6BAExCjJ,KAAK0J,YAAY,wB,GA/DEzI,IAAMC,W,iBC0FnByI,E,YA7Fb,WAAYC,GAAS,IAAD,8BAClB,4CAAMA,KACDA,OAAS,CACZjK,GAAIiK,EAAOC,MAAMD,OAAOjK,IAE1B,EAAKiE,MAAQ,CACXsB,KAAM,MAER,EAAK4E,OAAS,KACd,EAAK5G,MAAQ,KATK,E,8JAaZoB,EAAM,IAAIvE,E,mBACMuE,EAAIyF,WAAW/J,KAAK4J,OAAOjK,K,OAA3CqK,E,OACAC,EAAS,IAAIhE,EACbiE,EAAgBD,EAAOE,MAAMH,GAEnChK,KAAK0E,SAAS,CACZQ,KAAMgF,I,oFAIGE,GACX,IAAMC,EAAUrK,KAAK4D,MAAMsB,KAC3B,GAAKmF,EAAL,CAKA,IAAMlE,EAAOM,OAAON,KAAKiE,EAAQ1D,SAEjC2D,EAAQjF,SAAS4B,SAAQ,SAAAI,GACnBjB,EAAKmE,SAASlD,EAAQhB,QACxBgB,EAAQlC,KAAKd,KAAKgG,EAAQ1D,QAAQU,EAAQhB,WAI9CiE,EAAQlF,OAAOf,KAAKgG,EAAQjD,OAE5BnH,KAAK0E,SAAS,CACZQ,KAAK,eAAMmF,UAfXrK,KAAKuK,c,kIAoBPvK,KAAK8J,OAASU,IAAG,yBACjBxK,KAAK8J,OAAOW,GAAZ,kBAA0BzK,KAAK4J,OAAOjK,KAAM,SAACuF,GAC3CiE,QAAQC,IAAI,cAAelE,GAC3B,EAAKwF,aAAaxF,MAEpBlF,KAAK8J,OAAOW,GAAZ,mBAA2BzK,KAAK4J,OAAOjK,KAAM,SAAOuF,GAAP,iBAAAyF,EAAAC,OAAA,mDAC9B,QAAT1F,EADuC,uBAEnCZ,EAAM,IAAIvE,EAFyB,WAAA4K,EAAA,MAGrBrG,EAAIuG,SAAS,EAAKjB,OAAOjK,KAHJ,OAGnCuD,EAHmC,OAIzC,EAAKwB,SAAS,CAAExB,UAJyB,wCAQvCoB,EAAM,IAAIvE,E,mBACIuE,EAAIuG,SAAS7K,KAAK4J,OAAOjK,K,OAAvCuD,E,OACNlD,KAAK0E,SAAS,CAAExB,UAEhBlD,KAAKuK,Y,8FAILvK,KAAK8J,OAAOgB,U,+BAGJ,IAAD,OAOP,OACE,yBAAK5L,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAOgG,KAAMlF,KAAK4D,MAAMsB,QAE1B,yBAAKhG,UAAU,uBAZO,SAAC6L,GAC3B,GAAIA,EACF,OAAO,kBAAC,EAAD,CAAepL,GAAI,EAAKiK,OAAOjK,KAWjCqL,CAAoBhL,KAAK4D,MAAMV,QAAUlD,KAAK4D,MAAMV,MAAMK,cAC3D,kBAAC,EAAD,CAAeL,MAAOlD,KAAK4D,MAAMV,e,GAtFpBjC,IAAMC,WCahB+J,MAdf,WACE,OACE,yBAAK/L,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACsL,KAAK,IAAIC,UAAWrL,IACjC,kBAAC,IAAD,CAAOoL,KAAK,UAAUC,UAAWxH,IACjC,kBAAC,IAAD,CAAOuH,KAAK,aAAaC,UAAWxB,OCHxByB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1B,MACvB,2D,MCXN2B,IAASC,OAAO,kBAAC,IAAD,CAAYC,SAAS,KAAI,kBAAC,EAAD,OAAsB3G,SAASC,eAAe,SD4HjF,kBAAmB2G,WACrBA,UAAUC,cAAcC,MAAM1L,MAAK,SAAA2L,GACjCA,EAAaC,kB","file":"static/js/main.824a77e8.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        <img src={process.env.PUBLIC_URL + '/img/data_science_icon.svg'} width=\"45\" height=\"45\" alt=\"\" />\n        <span className=\"ml-2\">Fitsbook</span>\n      </Link>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/models\" className=\"nav-link\" activeClassName=\"active\">Models</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction HomeRoute() {\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"jumbotron\">\n        <h1>Fitsbook</h1>\n        <p>Homepage</p>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeRoute;","import Api from './Api';\n\nclass ModelsApi extends Api {\n  getModels() {\n    return this.get('/models');\n  }\n\n  getModel(id) {\n    return this.get(`/model/${id}`);\n  }\n\n  getHistory(id) {\n    return this.get(`/history/${id}`);\n  }\n\n  stopTraining(id) {\n    return this.basePost(`/training/${id}/stop`).then(res => res.text());\n  }\n}\n\nexport default ModelsApi;","class Api {\n  // API_ROOT = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n  // 'https://localhost:8000/api' : 'https://fitsbook.glitch.me/api';\n\n  constructor() {\n    // this.API_ROOT = 'https://fitsbook.glitch.me/api';\n    this.API_ROOT = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n      'http://localhost:8000/api' : 'https://fitsbook.glitch.me/api';\n  }\n\n  get(route) {\n    const init = {\n      method: 'GET',\n      mode: 'cors',\n      redirect: 'follow'\n    };\n\n    return fetch(`${this.API_ROOT}${route}`, init).then(res => res.json());\n  }\n\n  post(route, body) {\n    const init = {\n      method: 'POST',\n      mode: 'cors',\n      redirect: 'follow',\n      body\n    };\n\n    return fetch(`${this.API_ROOT}${route}`, init).then(res => res.json());\n  }\n\n  basePost(route, body) {\n    const init = {\n      method: 'POST',\n      mode: 'cors',\n      redirect: 'follow',\n      body\n    };\n\n    return fetch(`${this.API_ROOT}${route}`, init);\n  }\n\n  ping() {\n    fetch(`${this.API_ROOT}/ping`).then(res => res.text()).then(txt => {\n      if (txt) return true;\n      else return false;\n    });\n  }\n}\n\nexport default Api;","import React from 'react';\n\nclass TrainingLabel extends React.Component {\n  render() {\n    return (\n      <div>\n        <span className=\"spinner-grow spinner-grow-sm text-success\"></span>\n        <span className=\"text-success ml-1\">Training</span>\n      </div>\n    );\n  }\n}\n\nexport default TrainingLabel;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TrainingLabel from './TrainingLabel';\n\nfunction DurationLabel(props) {\n  if (props.show) {\n    return (\n      <div className=\"d-inline\">\n        <span className=\"text-muted font-weight-bold text-uppercase\"> Duration: </span>\n        {props.duration}\n      </div>\n    );\n  }\n  return null;\n}\n\nclass ModelCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n\n  formatDate(timestamp) {\n    const date = new Date(timestamp);\n    const day = ('0' + date.getDate()).slice(-2);\n    const month = ('0' + date.getMonth()).slice(-2);\n    const year = ('0' + date.getFullYear()).slice(-2);\n    const hours = ('0' + date.getHours()).slice(-2);\n    const minutes = ('0' + date.getMinutes()).slice(-2);\n    const seconds = ('0' + date.getSeconds()).slice(-2);\n\n    return `${day}/${month}/${year} - ${hours}:${minutes}:${seconds}`;\n  }\n\n  timeSince(timestamp) {\n    const yearInSeconds = 31536000;\n    const monthInSeconds = 2592000;\n    const dayInSeconds = 86400;\n    const hourInSeconds = 3600;\n    const minuteInSeconds = 60;\n    const seconds = Math.floor((Date.now() - timestamp) / 1000);\n\n    let interval = Math.floor(seconds / yearInSeconds);\n    if (interval > 1) {\n      return interval + ' years ago';\n    }\n\n    interval = Math.floor(seconds / monthInSeconds);\n    if (interval > 1) {\n      return interval + ' months ago';\n    }\n\n    interval = Math.floor(seconds / dayInSeconds);\n    if (interval > 1) {\n      return interval + ' days ago';\n    }\n\n    interval = Math.floor(seconds / hourInSeconds);\n    if (interval > 1) {\n      return interval + ' hours ago';\n    }\n\n    interval = Math.floor(seconds / minuteInSeconds);\n    if (interval > 1) {\n      return interval + ' minutes ago';\n    }\n\n    return Math.floor(seconds) + ' seconds ago';\n  }\n\n  elapsedTime(start, end) {\n    const delta = Math.abs((end - start) / 1000);\n    const days = Math.floor(delta / 86400);\n    const hours = Math.floor(delta / 3600) % 24;\n    const minutes = Math.floor(delta / 60) % 60;\n    const seconds = delta % 60;\n\n    let s = days > 0 ? days + ' days, ' : '';\n    s += hours > 0 ? hours + 'h, ' : '';\n    s += minutes > 0 ? minutes + 'min, ' : '';\n    s += seconds > 0 ? seconds + 's' : '';\n    return s;\n  }\n\n  render() {\n    const { id, model } = this.props;\n\n    return (\n      <Link to={`/stats/${id}`} style={{ color: 'inherit', textDecoration: 'none' }}>\n        <div className={`card ${this.props.className}`}>\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-between\">\n              <h5 className=\"card-title\">\n                {model.model.name}\n              </h5>\n              {!model.training_end && <TrainingLabel />}\n            </div>\n            <small className=\"d-block card-text\">\n              <span className=\"text-muted font-weight-bold text-uppercase\">Started: </span>\n              {this.timeSince(model.training_start)} &#x2022;\n              <DurationLabel show={model.training_end} duration={this.elapsedTime(model.training_start, model.training_end)} />\n            </small>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default ModelCard;","import React from 'react';\nimport ModelsApi from '../api/ModelsApi';\nimport ModelCard from './ModelCard';\n\nclass ModelsRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n  }\n\n  createTable(cards) {\n    const rows = [];\n\n    for (let i = 0; i < Math.ceil(cards.length / 2.0); i++) {\n      const cols = [];\n\n      for (let j = 0; j < 2 && 2 * i + j < cards.length; j++) {\n        cols.push(\n          <div key={`e-${i}-${j}`} className=\"col-md-6\">\n            {cards[2 * i + j]}\n          </div>\n        );\n      }\n\n      rows.push(\n        <div key={`e-${i}`} className=\"row\">\n          {cols}\n        </div>\n      );\n    }\n\n    return rows;\n  }\n\n  async componentDidMount() {\n    const api = new ModelsApi();\n    const models = await api.getModels();\n\n    const cards = models.map(model => {\n      return (\n        <ModelCard key={model.id} id={model.id} model={model} className=\"mb-2\" />\n      );\n    });\n\n    this.setState({\n      cards: cards\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        {this.createTable(this.state.cards)}\n      </div>\n    );\n  }\n}\n\nexport default ModelsRoute;","import React from 'react';\nimport ChartJS from 'chart.js';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n  }\n\n  componentDidMount() {\n    const ctx = document.getElementById('react-chart');\n    this.chartConfig = {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        aspectRatio: 1.75,\n        responsive: true\n      }\n    };\n\n    this.chartInstance = new ChartJS(ctx, this.chartConfig);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data) {\n      this.chartConfig.data.labels = this.props.data.labels;\n      this.chartConfig.data.datasets = this.props.data.datasets;\n      this.chartInstance.update();\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ width: this.props.width, height: this.props.height }}>\n        <canvas id=\"react-chart\" />\n      </div>\n    );\n  }\n}\n\nexport default Chart;","class HistoryParser {\n  constructor() {\n    this.colors = [\n      'rgb(75, 192, 192)',\n      'rgb(255, 99, 132)',\n      'rgb(153, 102, 255)',\n      'rgb(255, 159, 64)',\n      'rgb(255, 205, 86)',\n      'rgb(54, 162, 235)',\n      'rgb(201, 203, 207)'\n    ];\n    this.datasets = [];\n  }\n\n  createDatasetArray(keys) {\n    return keys.map((key, i) => {\n      return {\n        label: key,\n        data: [],\n        borderColor: this.colors[i],\n        backgroundColor: this.colors[i],\n        fill: false,\n        lineTension: 0\n      };\n    });\n  }\n\n  parse(data) {\n    if (this.datasets.length === 0) {\n      if (data.length > 0) {\n        const keys = Object.keys(data[0].metrics);\n        this.datasets = this.createDatasetArray(keys);\n      } else {\n        return;\n      }\n    }\n\n    // { metric1: [ ... ], metric2: [ ... ], ... }\n    const metricsObj = data.reduce((acc, curr) => {\n      Object.keys(curr.metrics).forEach(metric => {\n        if (metric in acc) {\n          acc[metric].push(curr.metrics[metric]);\n        } else {\n          acc[metric] = [curr.metrics[metric]];\n        }\n      })\n      return acc;\n    }, {});\n\n    const labels = data.map(r => {\n      return r.epoch;\n    })\n\n    this.datasets.forEach(dataset => {\n      if (dataset.label in metricsObj) {\n        dataset.data = metricsObj[dataset.label]\n      }\n    });\n\n    return {\n      labels: labels,\n      datasets: this.datasets\n    };\n  }\n}\n\nexport default HistoryParser;","import React from 'react';\nimport './SideModelInfo.css';\n\nclass SideModelInfo extends React.Component {\n  createTable(data, keyPrefix) {\n    if (!data) return;\n    const rows = Object.keys(data).map((k, i) => {\n      if (!data[k]) return null;\n\n      return (\n        <tr key={keyPrefix + '-' + i}>\n          <td>{k}</td>\n          <td>{data[k]}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <table className=\"table table-sm table-borderless table-responsive mb-0\">\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    );\n  }\n\n  drawLayers(data, keyPrefix) {\n    const rows = data.map((layer, i) => {\n      return (\n        <div className=\"mt-2 px-1\" key={`${keyPrefix}-${i}`}>\n          <div className=\"d-flex justify-content-center\">\n            <a className={`btn btn-block btn-outline-${layer.info.Trainable ? 'primary' : 'secondary'}`}\n              data-toggle=\"collapse\"\n              href={`#collapse-${keyPrefix}-${i}`}>\n              {layer.className}\n            </a>\n          </div>\n          <div className=\"collapse\" id={`collapse-${keyPrefix}-${i}`}>\n            <div className=\"card card-body p-1 mt-2\">\n              {this.createTable(layer.info, `collapse-${keyPrefix}-${i}-info`)}\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {rows}\n      </div>\n    );\n  }\n\n  parseModelData() {\n    const model = this.props.model;\n\n    if (model && Object.keys(model).length > 0) {\n      return {\n        'Name': model.model.name,\n        'Training Start': new Date(model.training_start).toLocaleString(),\n        'Training End': new Date(model.training_end).toLocaleString(),\n        'Duration': 'TODO'\n      };\n    }\n    return {};\n  }\n\n  parseOptimizerData() {\n    const model = this.props.model;\n\n    if (model && Object.keys(model).length > 0) {\n      return {\n        'Name': model.optimizer.name,\n        'Learning Rate': model.optimizer.config.learning_rate,\n        'Rho': model.optimizer.config.rho,\n        'Decay': model.optimizer.config.decay,\n        'Epsilon': model.optimizer.config.epsilon\n      };\n    }\n    return {};\n  }\n\n  parseLayersData() {\n    const model = this.props.model;\n\n    if (model && Object.keys(model).length > 0) {\n      return model.model.config.layers.map(layer => {\n        return {\n          'className': layer.class_name,\n          'info': {\n            'Trainable': String(layer.config.trainable),\n            'Data Type': layer.config.dtype,\n            'Units': layer.config.units,\n            'Activation': layer.config.activation,\n            'Input Shape': layer.config.batch_input_shape ? `(${String(layer.config.batch_input_shape)})` : null\n          }\n        };\n      });\n    }\n    return [];\n  }\n\n  render() {\n    return (\n      <div className=\"sideModelInfo mt-1\">\n        <h5 className=\"mt-3\">Model</h5>\n        {this.createTable(this.parseModelData(), 'model')}\n\n        <h5 className=\"mt-3\">Layers</h5>\n        {this.drawLayers(this.parseLayersData(), 'layers')}\n\n        <h5 className=\"mt-3\">Optimizer</h5>\n        {this.createTable(this.parseOptimizerData(), 'optimizer')}\n      </div>\n    );\n  }\n}\n\nexport default SideModelInfo;","import React from 'react';\nimport TrainingLabel from './TrainingLabel';\nimport ModelsApi from '../api/ModelsApi';\n\nfunction StopSignalNotification(props) {\n  return (\n    <div className={`alert alert-success ${props.show ? '' : 'd-none'}`}>\n      Stop signal sent. The training will end at the end of the current epoch.\n    </div>\n  );\n}\n\nclass TrainingPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showStopSignalNotification: false\n    }\n  }\n\n  async stopTrainingClickHandler() {\n    const api = new ModelsApi();\n    const r = await api.stopTraining(this.props.id);\n    console.log(r);\n    if (r === 'OK') {\n      this.setState({ showStopSignalNotification: true });\n    }\n  }\n\n  createModal() {\n    return (\n      <div className=\"modal fade\" id=\"training-panel-modal\" tabIndex=\"-1\">\n        <div className=\"modal-dialog modal-dialog-centered\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Confirm</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\"></button>\n            </div>\n            <div className=\"modal-body\">\n              Do you really want to stop training?\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                data-dismiss=\"modal\"\n                onClick={() => this.stopTrainingClickHandler()}>\n                Stop\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"alert alert-secondary\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <TrainingLabel />\n            <button\n              className=\"btn btn-danger\"\n              data-toggle=\"modal\"\n              data-target=\"#training-panel-modal\"\n              disabled={this.state.showStopSignalNotification}>\n              Stop Training\n            </button>\n          </div>\n        </div>\n\n        <StopSignalNotification show={this.state.showStopSignalNotification} />\n\n        {this.createModal('btn btn-primary')}\n      </div>\n    );\n  }\n}\n\nexport default TrainingPanel;","import React from 'react';\nimport ModelsApi from '../api/ModelsApi';\nimport Chart from './Chart';\nimport HistoryParser from '../helpers/HistoryParser';\nimport SideModelInfo from './SideModelInfo';\nimport TrainingPanel from './TrainingPanel';\nimport io from 'socket.io-client';\n\nclass StatsRoute extends React.Component {\n  constructor(params) {\n    super(params);\n    this.params = {\n      id: params.match.params.id\n    }\n    this.state = {\n      data: null\n    }\n    this.socket = null;\n    this.model = null;\n  }\n\n  async drawChart() {\n    const api = new ModelsApi();\n    const history = await api.getHistory(this.params.id);\n    const parser = new HistoryParser();\n    const parsedHistory = parser.parse(history);\n\n    this.setState({\n      data: parsedHistory\n    });\n  }\n\n  socketUpdate(newData) {\n    const oldData = this.state.data;\n    if (!oldData) {\n      this.drawChart();\n      return;\n    }\n\n    const keys = Object.keys(newData.metrics);\n\n    oldData.datasets.forEach(dataset => {\n      if (keys.includes(dataset.label)) {\n        dataset.data.push(newData.metrics[dataset.label]);\n      }\n    });\n\n    oldData.labels.push(newData.epoch);\n\n    this.setState({\n      data: { ...oldData }\n    });\n  }\n\n  async componentDidMount() {\n    this.socket = io('http://localhost:8000');\n    this.socket.on(`history-${this.params.id}`, (data) => {\n      console.log('socket data', data);\n      this.socketUpdate(data);\n    });\n    this.socket.on(`training-${this.params.id}`, async (data) => {\n      if (data === 'end') {\n        const api = new ModelsApi();\n        const model = await api.getModel(this.params.id);\n        this.setState({ model });\n      }\n    });\n\n    const api = new ModelsApi();\n    const model = await api.getModel(this.params.id);\n    this.setState({ model });\n\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  render() {\n    const renderTrainingPanel = (condition) => {\n      if (condition) {\n        return <TrainingPanel id={this.params.id} />;\n      }\n    }\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-9 mt-5\">\n            <Chart data={this.state.data} />\n          </div>\n          <div className=\"col-lg-3 h-100 pt-3\">\n            {renderTrainingPanel(this.state.model && !this.state.model.training_end)}\n            <SideModelInfo model={this.state.model} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StatsRoute;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport HomeRoute from './components/HomeRoute';\nimport ModelsRoute from './components/ModelsRoute';\nimport StatsRoute from './components/StatsRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <Switch>\n        <Route exact path='/' component={HomeRoute} />\n        <Route path='/models' component={ModelsRoute} />\n        <Route path='/stats/:id' component={StatsRoute} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<HashRouter basename='/'><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}