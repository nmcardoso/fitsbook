{"version":3,"sources":["components/Navbar.js","views/Home.js","api/ModelsApi.js","api/Api.js","components/ModelCard.js","views/Models.js","components/Chart.js","helpers/HistoryParser.js","views/Stats.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","src","width","height","alt","type","data-toggle","data-target","id","exact","to","activeClassName","Home","ModelsApi","this","get","API_ROOT","route","fetch","method","mode","redirect","then","res","json","body","init","text","txt","ModelCard","props","timestamp","date","Date","day","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","start","end","delta","Math","abs","days","floor","s","model","style","color","textDecoration","name","formatDate","training_start","training_end","elapsedTime","React","Component","Models","state","cards","rows","i","ceil","length","cols","j","push","key","api","getModels","models","map","setState","createTable","Chart","chart","ctx","document","getElementById","chartConfig","data","labels","datasets","options","scales","yAxes","ticks","beginAtZero","aspectRatio","responsive","chartInstance","ChartJS","prevProps","prevState","update","HistoryParser","colors","keys","label","borderColor","backgroundColor","fill","lineTension","Object","metrics","createDatasetArray","metricsObj","reduce","acc","curr","forEach","metric","r","epoch","dataset","Stats","params","match","socket","getHistory","history","parser","parsedHistory","parse","newData","oldData","includes","drawChart","io","on","console","log","socketUpdate","App","path","component","Boolean","window","location","hostname","ReactDOM","render","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.678e66f0.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        <img src=\"/img/data_science_icon.svg\" width=\"45\" height=\"45\" alt=\"\" /> <span className=\"ml-1\">Fitsbook</span>\n      </a>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/\" className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact to=\"/models\" className=\"nav-link\" activeClassName=\"active\">Models</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"jumbotron\">\n        <h1>Fitsbook</h1>\n        <p>Homepage</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import Api from './Api';\n\nclass ModelsApi extends Api {\n  getModels() {\n    return this.get('/models');\n  }\n\n  getModel(id) {\n    return this.get(`/model/${id}`);\n  }\n\n  getHistory(id) {\n    return this.get(`/history/${id}`);\n  }\n}\n\nexport default ModelsApi;","class Api {\n  // API_ROOT = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n  // 'https://localhost:8000/api' : 'https://fitsbook.glitch.me/api';\n\n  constructor() {\n    // this.API_ROOT = 'https://fitsbook.glitch.me/api';\n    this.API_ROOT = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n      'http://localhost:8000/api' : 'https://fitsbook.glitch.me/api';\n  }\n\n  get(route) {\n    const init = {\n      method: 'GET',\n      mode: 'cors',\n      redirect: 'follow'\n    };\n\n    return fetch(`${this.API_ROOT}${route}`, init).then(res => res.json());\n  }\n\n  post(route, body) {\n    const init = {\n      method: 'POST',\n      mode: 'cors',\n      redirect: 'follow',\n      body\n    };\n\n    return fetch(`${this.API_ROOT}/${route}`, init).then(res => res.json());\n  }\n\n  ping() {\n    fetch(`${this.API_ROOT}/ping`).then(res => res.text()).then(txt => {\n      if (txt) return true;\n      else return false;\n    });\n  }\n}\n\nexport default Api;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ModelCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n\n  formatDate(timestamp) {\n    const date = new Date(timestamp);\n    const day = ('0' + date.getDate()).slice(-2);\n    const month = ('0' + date.getMonth()).slice(-2);\n    const year = ('0' + date.getFullYear()).slice(-2);\n    const hours = ('0' + date.getHours()).slice(-2);\n    const minutes = ('0' + date.getMinutes()).slice(-2);\n    const seconds = ('0' + date.getSeconds()).slice(-2);\n\n    return `${day}/${month}/${year} - ${hours}:${minutes}:${seconds}`;\n  }\n\n  elapsedTime(start, end) {\n    const delta = Math.abs((end - start) / 1000);\n    const days = Math.floor(delta / 86400);\n    const hours = Math.floor(delta / 3600) % 24;\n    const minutes = Math.floor(delta / 60) % 60;\n    const seconds = delta % 60;\n\n    let s = days > 0 ? days + ' days, ' : '';\n    s += hours > 0 ? hours + 'h, ' : '';\n    s += minutes > 0 ? minutes + 'min, ' : '';\n    s += seconds > 0 ? seconds + 's' : '';\n    return s;\n  }\n\n  render() {\n    const { id, model } = this.props;\n\n    return (\n      <Link to={`/stats/${id}`} style={{ color: 'inherit', textDecoration: 'none' }}>\n        <div className={`card ${this.props.className}`}>\n          <div className=\"card-body\">\n            <h5 className=\"title\">\n              {model.model.name}\n            </h5>\n            <small className=\"d-block card-text mb-0 pb-0\">\n              Start: {this.formatDate(model.training_start)} &#x2022;\n              End: {this.formatDate(model.training_end)}\n            </small>\n            <small className=\"d-block card-text\">\n              Elapsed Time: {this.elapsedTime(model.training_start, model.training_end)}\n            </small>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default ModelCard;","import React from 'react';\nimport ModelsApi from '../api/ModelsApi';\nimport ModelCard from '../components/ModelCard';\n\nclass Models extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n  }\n\n  createTable(cards) {\n    const rows = [];\n\n    for (let i = 0; i < Math.ceil(cards.length / 2.0); i++) {\n      const cols = [];\n\n      for (let j = 0; j < 2 && 2 * i + j < cards.length; j++) {\n        cols.push(\n          <div key={`e-${i}-${j}`} className=\"col-md-6\">\n            {cards[2 * i + j]}\n          </div>\n        );\n      }\n\n      rows.push(\n        <div key={`e-${i}`} className=\"row\">\n          {cols}\n        </div>\n      );\n    }\n\n    return rows;\n  }\n\n  async componentDidMount() {\n    const api = new ModelsApi();\n    const models = await api.getModels();\n\n    const cards = models.map(model => {\n      return (\n        <ModelCard key={model.id} id={model.id} model={model} className=\"mb-2\" />\n      );\n    });\n\n    this.setState({\n      cards: cards\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        {this.createTable(this.state.cards)}\n      </div>\n    );\n  }\n}\n\nexport default Models;","import React from 'react';\nimport ChartJS from 'chart.js';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n  }\n\n  componentDidMount() {\n    const ctx = document.getElementById('react-chart');\n    this.chartConfig = {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        aspectRatio: 1.75,\n        responsive: true\n      }\n    };\n\n    this.chartInstance = new ChartJS(ctx, this.chartConfig);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data) {\n      this.chartConfig.data.labels = this.props.data.labels;\n      this.chartConfig.data.datasets = this.props.data.datasets;\n      this.chartInstance.update();\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ width: this.props.width, height: this.props.height }}>\n        <canvas id=\"react-chart\" />\n      </div>\n    );\n  }\n}\n\nexport default Chart;","class HistoryParser {\n  constructor() {\n    this.colors = [\n      'rgb(75, 192, 192)',\n      'rgb(255, 99, 132)',\n      'rgb(153, 102, 255)',\n      'rgb(255, 159, 64)',\n      'rgb(255, 205, 86)',\n      'rgb(54, 162, 235)',\n      'rgb(201, 203, 207)'\n    ];\n    this.datasets = [];\n  }\n\n  createDatasetArray(keys) {\n    return keys.map((key, i) => {\n      return {\n        label: key,\n        data: [],\n        borderColor: this.colors[i],\n        backgroundColor: this.colors[i],\n        fill: false,\n        lineTension: 0\n      };\n    });\n  }\n\n  parse(data) {\n    if (this.datasets.length === 0) {\n      if (data.length > 0) {\n        const keys = Object.keys(data[0].metrics);\n        this.datasets = this.createDatasetArray(keys);\n      } else {\n        return;\n      }\n    }\n\n    // { metric1: [ ... ], metric2: [ ... ], ... }\n    const metricsObj = data.reduce((acc, curr) => {\n      Object.keys(curr.metrics).forEach(metric => {\n        if (metric in acc) {\n          acc[metric].push(curr.metrics[metric]);\n        } else {\n          acc[metric] = [curr.metrics[metric]];\n        }\n      })\n      return acc;\n    }, {});\n\n    const labels = data.map(r => {\n      return r.epoch;\n    })\n\n    this.datasets.forEach(dataset => {\n      if (dataset.label in metricsObj) {\n        dataset.data = metricsObj[dataset.label]\n      }\n    });\n\n    return {\n      labels: labels,\n      datasets: this.datasets\n    };\n  }\n}\n\nexport default HistoryParser;","import React from 'react';\nimport ModelsApi from '../api/ModelsApi';\nimport Chart from '../components/Chart';\nimport HistoryParser from '../helpers/HistoryParser';\nimport io from 'socket.io-client';\n\nclass Stats extends React.Component {\n  constructor(params) {\n    super(params);\n    this.params = {\n      id: params.match.params.id\n    }\n    this.state = {\n      data: null\n    }\n    this.socket = null;\n  }\n\n  async drawChart() {\n    const api = new ModelsApi();\n    const history = await api.getHistory(this.params.id);\n    const parser = new HistoryParser();\n    const parsedHistory = parser.parse(history);\n\n    this.setState({\n      data: parsedHistory\n    });\n  }\n\n  socketUpdate(newData) {\n    const oldData = this.state.data;\n    if (!oldData) {\n      this.drawChart();\n      return;\n    }\n\n    const keys = Object.keys(newData.metrics);\n\n    oldData.datasets.forEach(dataset => {\n      if (keys.includes(dataset.label)) {\n        dataset.data.push(newData.metrics[dataset.label]);\n      }\n    });\n\n    oldData.labels.push(newData.epoch);\n\n    this.setState({\n      data: { ...oldData }\n    });\n  }\n\n  componentDidMount() {\n    this.socket = io('http://localhost:8000');\n    this.socket.on(`history-${this.params.id}`, (data) => {\n      console.log('socket data', data);\n      this.socketUpdate(data);\n    });\n\n    this.drawChart();\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <Chart data={this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default Stats;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './views/Home';\nimport Models from './views/Models';\nimport Stats from './views/Stats';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/models' component={Models} />\n        <Route path='/stats/:id' component={Stats} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<HashRouter basename='/'><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}